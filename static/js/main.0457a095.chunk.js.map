{"version":3,"sources":["components/NavBar.js","components/Item.js","components/ItemList.js","App.js","index.js"],"names":["NavBar","search","onInputChange","onSearch","className","type","placeholder","value","onChange","onClick","Item","recipe","useState","show","setShow","src","image","alt","label","ingredientLines","map","ingredient","id","key","ItemList","recipes","App","setSearch","setRecipes","formSubmit","setFormSubmit","useEffect","a","axios","get","response","data","hits","console","log","getRecipe","e","target","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA2BeA,G,MAzBA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SACvC,OACE,yBAAKC,UAAU,wDACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,6BAAb,eADF,SAGA,0BAAMA,UAAU,eACd,2BACEA,UAAU,uBACVC,KAAK,SACLC,YAAY,SACZC,MAAON,EACPO,SAAUN,IAEZ,4BACEE,UAAU,uCACVK,QAASN,GAFX,cCqBOO,EAnCF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACHC,oBAAS,GADN,mBACpBC,EADoB,KACdC,EADc,KAE3B,OACE,kBAAC,WAAD,KACE,yBAAKV,UAAU,yBACb,yBACEW,IAAKJ,EAAOA,OAAOK,MACnBZ,UAAU,wCACVa,IAAI,KAEN,yBAAKb,UAAU,aACb,4BAAKO,EAAOA,OAAOO,QAEpBL,GACC,wBAAIT,UAAU,+BACXO,EAAOA,OAAOQ,gBAAgBC,KAAI,SAACC,EAAYC,GAAb,OACjC,wBAAIlB,UAAU,kBAAkBmB,IAAKD,GAClCD,OAKT,6BACE,4BACEjB,UAAU,uCACVK,QAAS,kBAAMK,GAASD,KAF1B,YCZKW,EAVE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACE,yBAAKrB,UAAU,gBACZqB,EAAQL,KAAI,SAACT,EAAQW,GAAT,OACX,kBAAC,EAAD,CAAMX,OAAQA,EAAQY,IAAKD,SCwCpBI,MAzCf,WAAgB,IAAD,EACed,mBAAS,WADxB,mBACNX,EADM,KACE0B,EADF,OAEiBf,mBAAS,IAF1B,mBAENa,EAFM,KAEGG,EAFH,OAGuBhB,oBAAS,GAHhC,mBAGNiB,EAHM,KAGMC,EAHN,KA6Bb,OArBAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACOC,IAAMC,IAAN,0CACcjC,EADd,mBALZ,WAKY,oBAJX,qCAGI,OACVkC,EADU,OAIhBP,EAAWO,EAASC,KAAKC,MACzBC,QAAQC,IAAIJ,EAASC,MALL,2CAAH,qDAQfI,KACC,CAACX,IAYF,oCACE,kBAAC,EAAD,CACE5B,OAAQA,EACRC,cAbgB,SAACuC,GACrBd,EAAUc,EAAEC,OAAOnC,QAafJ,SAVW,SAACsC,GAChBA,EAAEE,iBACFb,GAAeD,MAUb,kBAAC,EAAD,CAAUJ,QAASA,MCtCzBmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0457a095.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NavBar = ({ search, onInputChange, onSearch }) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light justify-content-between\">\n      <div className=\"navbar-brand\">\n        <i className=\"material-icons brand-icon\">donut_small</i>CMIAS\n      </div>\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          value={search}\n          onChange={onInputChange}\n        />\n        <button\n          className=\"btn btn-outline-success my-2 my-sm-0\"\n          onClick={onSearch}\n        >\n          Search\n        </button>\n      </form>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, Fragment } from \"react\";\n\nconst Item = ({ recipe }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <Fragment>\n      <div className=\"card py-2 text-center\">\n        <img\n          src={recipe.recipe.image}\n          className=\"img-fluid w-50 mx-auto rounded-circle\"\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h5>{recipe.recipe.label}</h5>\n        </div>\n        {show && (\n          <ul className=\"list-group list-group-flush\">\n            {recipe.recipe.ingredientLines.map((ingredient, id) => (\n              <li className=\"list-group-item\" key={id}>\n                {ingredient}\n              </li>\n            ))}\n          </ul>\n        )}\n        <div>\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            onClick={() => setShow(!show)}\n          >\n            Show\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\n\nconst ItemList = ({ recipes }) => {\n  return (\n    <div className=\"card-columns\">\n      {recipes.map((recipe, id) => (\n        <Item recipe={recipe} key={id} />\n      ))}\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport ItemList from \"./components/ItemList\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"chicken\");\n  const [recipes, setRecipes] = useState([]);\n  const [formSubmit, setFormSubmit] = useState(false);\n\n  const APP_ID = \"3f8df52c\";\n  const APP_KEY = \"b0c395f0690f0f60749181922a1b0188\";\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      const response = await axios.get(\n        `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`\n      );\n      setRecipes(response.data.hits);\n      console.log(response.data);\n    };\n\n    getRecipe();\n  }, [formSubmit]);\n\n  const onInputChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const onSearch = (e) => {\n    e.preventDefault();\n    setFormSubmit(!formSubmit);\n  };\n\n  return (\n    <>\n      <NavBar\n        search={search}\n        onInputChange={onInputChange}\n        onSearch={onSearch}\n      />\n      <ItemList recipes={recipes} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}